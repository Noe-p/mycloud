name: CI/CD Docker Compose

on:
  push:
    branches: [main]

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      GHCR_REGISTRY: ghcr.io
      OWNER: ${{ github.repository_owner }}
      SHA: ${{ github.sha }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Compute meta (lowercase owner, short sha)
        id: meta
        run: |
          echo "owner_lc=${OWNER,,}" >> "$GITHUB_OUTPUT"
          echo "short_sha=${SHA::8}" >> "$GITHUB_OUTPUT"
        env:
          OWNER: ${{ github.repository_owner }}
          SHA: ${{ github.sha }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.GHCR_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & push multi-arch image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: ${{ env.GHCR_REGISTRY }}/${{ steps.meta.outputs.owner_lc }}/mycloud:${{ steps.meta.outputs.short_sha }}
          build-args: |
            NEXT_PUBLIC_APP_URL=${{ secrets.NEXT_PUBLIC_APP_URL }}

      - name: Inject image tag into docker-compose.yml
        env:
          GHCR_REGISTRY: ${{ env.GHCR_REGISTRY }}
          OWNER_LC: ${{ steps.meta.outputs.owner_lc }}
          SHORT_SHA: ${{ steps.meta.outputs.short_sha }}
        run: |
          sed -i "s|\${GHCR_REGISTRY}|$GHCR_REGISTRY|g" docker-compose.yml
          sed -i "s|\${OWNER_LC}|$OWNER_LC|g" docker-compose.yml
          sed -i "s|\${SHA}|$SHORT_SHA|g" docker-compose.yml

      - name: Upload deploy compose file
        uses: actions/upload-artifact@v4
        with:
          name: deploy-compose
          path: docker-compose.yml

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Download deploy compose file
        uses: actions/download-artifact@v4
        with:
          name: deploy-compose

      - name: Ensure remote directory exists
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            mkdir -p ~/mycloud

      - name: Copy Compose file to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: 'docker-compose.yml'
          target: '~/mycloud/'
          strip_components: 0

      - name: Deploy via SSH (avec login GHCR)
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd ~/mycloud
            echo "${{ secrets.CR_PAT }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
            docker compose pull
            docker compose up -d --remove-orphans
